@page "/Orders"
@inject IOrderService orderService
<div class="card bg-white">
    <div class="card-header  d-flex justify-content-between align-items-center" style="background-color:white;">
        <h5>
            <i class="oi oi-people mr-2"></i>
            Orders
        </h5>
        <a href="adminusers/create" class="btn ml-auto btn-sm btn-success">
            <i aria-hidden="true" class="oi oi-plus mr-2"></i> Add User
        </a>
    </div>
    <div class="card-body">
        @if (orders == null)
        {
            <p><em>Loading...</em></p>
        }
        else
        {
            <table class="table table-responsive-sm table-borderless">
                <thead>
                    <tr>
                        <th>Name</th>
                        <th>Email</th>
                        <th>Role</th>
                        <th>CreatedOn</th>
                        <th class="text-right pr-4">Options</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var order in orders)
                    {
                        <tr>
                            <td>@order.Code</td>
                            <td>@order.Customer.Name</td>
                            <td>@order.DeliveryAmount</td>
                            <td>@order.CreatedOn.Value.ToShortDateString()</td>
                            <td class="text-right">
                                <a href="orders/edit/@order.Id" class="btn btn-light btn-sm">
                                    <i class="oi oi-pencil mr-1 text-info"></i> 
                                </a>
                                <button onclick="" class="btn btn-light btn-sm">
                                    <i class="oi oi-trash mr-1 text-danger"></i> 
                                </button>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
            <Pagination MetaData="MetaData" Spread="2" SelectedPage="SelectedPage" />
        }

    </div>
</div>


@code {
    private bool loading;
    protected IEnumerable<OrderResponse> orders;
    protected MetaData MetaData = new MetaData();
    protected PagingRequest model = new PagingRequest()
    {
        PageSize = 5,
    };

    private async Task SelectedPage(int page)
    {
        model.PageNumber = page;
        await Load();
    }

    public async Task Load()
    {
        loading = true;
        var reponses = await orderService.GetOrders(model);
        orders = reponses;
        MetaData = reponses.MetaData;
        loading = false;
    }

    protected override async Task OnInitializedAsync()
    {
        await Load();
    }
}
