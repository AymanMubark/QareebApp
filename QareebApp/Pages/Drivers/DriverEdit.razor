@page "/drivers/edit/{id}"
@inject IDriverService driverService
@inject NavigationManager NavigationManager
<MudItem>
    <MudText Typo="Typo.h5" Color="Color.Primary" Class="mb-4">Edit Driver</MudText>
</MudItem>
<MudCard Breakpoint="Breakpoint.SmAndDown">
    <MudCardHeader>
        <CardHeaderContent>
            <MudText Typo="Typo.h6">Driver : @response?.Name</MudText>
        </CardHeaderContent>
    </MudCardHeader>
    <MudCardContent>
        @if (!string.IsNullOrEmpty(error))
        {
            <MudAlert Severity="Severity.Error">@error</MudAlert>
        }
        <MudForm Model="@model" @onsubmit="HandleValidSubmit">
            <MudItem>
                <MudTextField @bind-Value="model.Name" Label="Name" Variant="Variant.Text"></MudTextField>
            </MudItem>
            <MudItem>
                <MudTextField InputType="InputType.Telephone" @bind-Value="model.Phone" Label="Phone" Variant="Variant.Text"></MudTextField>
            </MudItem>
            <MudItem>
                <MudTextField InputType="InputType.Email" @bind-Value="model.Email" Label="Email" Variant="Variant.Text"></MudTextField>
            </MudItem>
            <MudItem Style="margin-top:20px" md="4">
                <InputFile id="fileInput112" OnChange="LoadFile" hidden accept=".jpg, .jpeg, .png" />
                <MudButton HtmlTag="label"
                           Variant="Variant.Filled"
                           Color="Color.Primary"
                           StartIcon="@Icons.Filled.CloudUpload"
                           for="fileInput112">
                    Upload your images
                </MudButton>
            </MudItem>
            @if (model.Image != null)
            {
                <MudListItem Icon="@Icons.Filled.AttachFile">
                    @model.Image.Name <code>@model.Image.Size bytes</code>
                </MudListItem>
            }
            <MudButton Style="margin-top:20px" Variant="Variant.Filled" Color="Color.Success" ButtonType="ButtonType.Submit" FullWidth="true">Save</MudButton>
        </MudForm>
    </MudCardContent>
</MudCard>


@code {
    [Parameter]
    public string id { get; set; }
    private bool loading;
    protected CreateDriverForm model = new CreateDriverForm();
    private string error;
    private DriverResponse response;

    protected override async Task OnInitializedAsync()
    {
        await Load();
    }


    public async Task Load()
    {
        loading = true;
        response = await driverService.Get(Guid.Parse(id));
        model = new()
        {
            Name = response.Name,
            Email = response.Email,
            Phone = response.Phone,
        };
        loading = false;
    }


    private async Task HandleValidSubmit()
    {
        try
        {
            loading = true;
            var reponses = await driverService.Edit(Guid.Parse(id), model);
            if (reponses != null)
            {
                NavigationManager.NavigateTo("drivers");
            }
        }
        catch (Exception ex)
        {
            error = ex.Message;
            loading = false;
            StateHasChanged();
        }
    }

    private void LoadFile(InputFileChangeEventArgs e)
    {

        try
        {
            model.Image = e.File;
        }
        catch (Exception ex)
        {
            Console.WriteLine(ex.Message);
        }
    }
}
